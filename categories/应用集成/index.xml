<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>应用集成 on Distributed</title>
    <link>https://www6v.github.io/www6vDistributed/categories/%E5%BA%94%E7%94%A8%E9%9B%86%E6%88%90/</link>
    <description>Recent content in 应用集成 on Distributed</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 07 Apr 2018 10:01:24 +0000</lastBuildDate>
    <atom:link href="https://www6v.github.io/www6vDistributed/categories/%E5%BA%94%E7%94%A8%E9%9B%86%E6%88%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>应用集成方式</title>
      <link>https://www6v.github.io/www6vDistributed/docs/%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/EAI/</link>
      <pubDate>Sat, 07 Apr 2018 10:01:24 +0000</pubDate>
      <guid>https://www6v.github.io/www6vDistributed/docs/%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/EAI/</guid>
      <description>企业应用之间主要有4种集成方式 # 文件传输 # 文件传输 由各个应用产生文件, 其中包含提供其它应用使用的信息. 特征:　内部数据模式自由(schema free)&#xA;优势: 1. 内部细节透明 2. 松耦合 3. 标准文件格式支持,如xml, json等.&#xA;劣势: 1. 更新慢, 数据不同步, 数据过时 2. 数据不完整, 数据不完全正确时, 数据不一致问题解决困难.3. 产生大量小文件时, 昂贵且不可靠. 4. 语义不一致&#xA;适用于批处理.&#xA;共享数据库 # 共享数据库 把应用的数据存储在一个共享数据库中来集成应用,　并定制数据库模式来处理不同应用的各种需求. 特征:　数据有模式(schema)&#xA;优势: 1. 提供模型一致性 2. 通过事务管理数据一致性 3. 共享数据, 避免语义不一致问题.&#xA;劣势: 1. 统一的数据库模式难设计. 模式改变,　应用也要改变. 2. 遗留系统很难提供一个可扩展的数据库模式供新的应用使用. 3.　性能瓶颈(单点访问) 4. 数据分布迁移困难. 5.应用和数据库紧耦合. 可作为新老系统的集成和改造的候选方案&#xA;远程调用 # 远程调用 应用公开提供过程, 并能够被远程调用, 应用通过调用这些过程来执行操作并交换数据. 特征:　公开外部接口&#xA;优势:　1.</description>
    </item>
  </channel>
</rss>
